databaseDirectory: null
resetChainDatabases: false
chainweb:
  throttling:
    local: 0.1
    mining: 2
    global: 50.0
    putPeer: 11
  chainwebVersion: mainnet01
  mining:
    coordination:
      enabled: false
      mode: private
      limit: 1200
      miners: []
    nodeMining:
      enabled: false
  p2p:
    peerDbFilePath: null
    peer:
      certificateChainFile: null
      key: null
      interface: '*'
      certificateChain: null
      hostaddress:
        hostname: localhost
        port: 443
      keyFile: null
    maxPeerCount: 50
    private: false
    ignoreBootstrapNodes: true
    maxSessionCount: 10
    sessionTimeout: 240
    peers:
    - address:
        hostname: us-e1.chainweb.com
        port: 443
      id: null
    - address:
        hostname: us-e2.chainweb.com
        port: 443
      id: null
    - address:
        hostname: us-e3.chainweb.com
        port: 443
      id: null
    - address:
        hostname: us-w1.chainweb.com
        port: 443
      id: null
    - address:
        hostname: us-w2.chainweb.com
        port: 443
      id: null
    - address:
        hostname: us-w3.chainweb.com
        port: 443
      id: null
    - address:
        hostname: fr1.chainweb.com
        port: 443
      id: null
    - address:
        hostname: fr2.chainweb.com
        port: 443
      id: null
    - address:
        hostname: fr3.chainweb.com
        port: 443
      id: null
    - address:
        hostname: jp1.chainweb.com
        port: 443
      id: null
    - address:
        hostname: jp2.chainweb.com
        port: 443
      id: null
    - address:
        hostname: jp3.chainweb.com
        port: 443
      id: null
  transactionIndex:
    enabled: true
    configuration: {}
  nodeId:
    _nodeIdId: 0
  headerStream: false
  mempoolP2p:
    enabled: true
    configuration:
      pollInterval: 30
      maxSessionCount: 6
      sessionTimeout: 240
  reintroTxs: true
  cuts:
    pruneChainDatabase: true
    fetchTimeout: 3000000
    initialCutHeightLimit: null
  rosetta: true
  localApi:
    interface: '*'
    port: 1848
logging:
  telemetryBackend:
    enabled: true
    configuration:
      handle: stderr
      color: auto
      format: text
  backend:
    handle: stderr
    color: auto
    format: text
  logger:
    log_level: warn
    queue_size: 1000
    exception_wait: 1000
    exit_timeout: 1000000
    scope: []
    exception_limit: 10
    policy: discard
  clusterId: docker-node
  amberdataBackend:
    enabled: false
  filter:
    rules: []
    default: debug
